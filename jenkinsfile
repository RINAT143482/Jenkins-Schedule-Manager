pipeline {
    agent any  // הקביעה שה-Pipeline ירוץ על כל סוכן זמין

    parameters {
        string(name: 'DAY', defaultValue: 'Monday', description: 'Enter the day of the class') // הגדרת פרמטר יום השיעור (ברירת מחדל: Monday)
        string(name: 'TIME', defaultValue: '10:00', description: 'Enter the time of the class') // הגדרת פרמטר שעה (ברירת מחדל: 10:00)
        string(name: 'SUBJECT', defaultValue: 'Math', description: 'Enter the subject of the class') // הגדרת פרמטר נושא השיעור (ברירת מחדל: Math)
    }

    stages {
        // שלב 1 - וולידציה של פרמטרים שהוזנו
        stage('Validate Parameters') {
            steps {
                script {
                    // אם אחד מהפרמטרים חסר, ה-Pipeline יכשל ויתקבל שגיאה
                    if (!params.DAY || !params.TIME || !params.SUBJECT) {
                        error("Missing required parameters: DAY, TIME, or SUBJECT")  // הצגת הודעת שגיאה אם חסר אחד מהפרמטרים
                    }
                    echo "Parameters validated: Day=${params.DAY}, Time=${params.TIME}, Subject=${params.SUBJECT}" // הצגת הפרמטרים שהוזנו בלוג
                }
            }
        }

        // שלב 2 - שלב Checkout להורדת הקוד מה-GitHub
        stage('Checkout') {
            steps {
                script {
                    echo 'Checking out the repository...' // הודעה בלוג שמתחילים בהורדת הקוד
                    checkout([  // הגדרת הורדת הקוד מאחסון Git
                        $class: 'GitSCM',  // שימוש ב-Git
                        branches: [[name: '*/main']],  // התמקדות ב-branch הראשי
                        userRemoteConfigs: [[  // הגדרת פרטי ה-GitHub
                            url: 'https://github.com/RINAT143482/Jenkins-Schedule-Manager.git',  // כתובת ה-Repository ב-GitHub
                            credentialsId: 'github-creds'  // מזהה האישורים ב-Jenkins (עליך להגדיר את האישורים)
                        ]]
                    ])
                }
            }
        }

        // שלב 3 - וולידציה של קבצים חשובים
        stage('Validate Files') {
            steps {
                script {
                    def filePath = "C:\\Users\\rinat\\Desktop\\jenkis\\proj.ps1"  // הנתיב המלא לקובץ PowerShell
                    // אם הקובץ לא קיים בנתיב הנתון, ה-Pipeline ייכשל ויתקבל שגיאה
                    if (!fileExists(filePath)) {
                        error("PowerShell script 'proj.ps1' not found at path: ${filePath}")  // הצגת שגיאה אם הקובץ לא נמצא
                    }

                    def outputDir = "C:\\Users\\rinat\\Desktop\\jenkis\\output"  // הנתיב המלא לתיקיית ה-output
                    // אם התיקייה לא קיימת, ה-Pipeline ייכשל ויתקבל שגיאה
                    if (!fileExists(outputDir)) {
                        error("Output directory not found: ${outputDir}")  // הצגת שגיאה אם התיקייה לא קיימת
                    }
                }
            }
        }

        // שלב 4 - הרצת סקריפט PowerShell
        stage('Execute PowerShell Script') {
            steps {
                script {
                    echo 'Running PowerShell schedule manager script...'  // הודעה בלוג על הרצת הסקריפט
                    // הרצת סקריפט PowerShell עם הפרמטרים שהוזנו
                    powershell script: "C:\\Users\\rinat\\Desktop\\jenkis\\proj.ps1 -Day ${params.DAY} -Time ${params.TIME} -Subject ${params.SUBJECT}"
                }
            }
        }

        // שלב 5 - פרסום דוח HTML
        stage('Publish HTML Report') {
            steps {
                script {
                    echo 'Publishing HTML output...'  // הודעה בלוג על פרסום הדוח
                    publishHTML(target: [  // פרסום דוח HTML ב-Jenkins
                        allowMissing: false,  // אם הקובץ חסר, ה-Pipeline ייכשל
                        alwaysLinkToLastBuild: true,  // הקובץ יהיה מקושר תמיד להרצה האחרונה
                        keepAll: true,  // שומר את כל הגרסאות של הדוח
                        reportDir: 'C:\\Users\\rinat\\Desktop\\jenkis',  // נתיב תיקיית הדוח
                        reportFiles: 'schedule.html',  // שם קובץ ה-HTML שמפורסם
                        reportName: 'Schedule Report'  // שם הדוח ב-Jenkins
                    ])
                }
            }
        }
    }

    post {
        // פעולות שנעשות לאחר סיום ה-Pipeline
        success {
            echo 'Pipeline completed successfully!'  // הודעה אם ה-Pipeline הסתיים בהצלחה
        }
        failure {
            echo 'Pipeline failed!'  // הודעה אם ה-Pipeline נכשל
        }
    }
}
