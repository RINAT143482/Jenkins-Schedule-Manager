pipeline {  
    agent any   

    parameters {  
        string(name: 'DAY', defaultValue: 'Monday', description: 'Enter the day of the class') 
        string(name: 'TIME', defaultValue: '10:00', description: 'Enter the time of the class')
        string(name: 'SUBJECT', defaultValue: 'Math', description: 'Enter the subject of the class') 
    }

    stages { 

        stage('Validate Parameters') {  
            steps {  
                script {  
                    if (!params.DAY || !params.TIME || !params.SUBJECT) {  
                        error("Missing required parameters: DAY, TIME, or SUBJECT") 
                    }
                    echo "Parameters validated: Day=${params.DAY}, Time=${params.TIME}, Subject=${params.SUBJECT}"  
                }
            }
        }

        stage('Checkout') {  
            steps {  
                script {
                    echo 'Checking out the repository...'  
                    checkout([ 
                        $class: 'GitSCM',  
                        branches: [[name: '*/main']],  
                        userRemoteConfigs: [[ 
                            url: 'https://github.com/RINAT143482/Jenkins-Schedule-Manager.git',  
                            credentialsId: 'github-creds'  
                        ]]
                    ])
                }
            }
        }

        stage('Validate Files') {  
            steps {
                script {
                    def filePath = "${env.WORKSPACE}\\proj.ps1"  
                    if (!fileExists(filePath)) {  
                        error("PowerShell script 'proj.ps1' not found at path: ${filePath}") 
                    }

                    def outputDir = "${env.WORKSPACE}\\output" 
                    if (!fileExists(outputDir)) { 
                        error("Output directory not found: ${outputDir}") 
                    }
                }
            }
        }

        stage('Execute PowerShell Script') { 
            steps {
                script {
                    echo 'Running PowerShell schedule manager script...'  
                    powershell script: """  
                        ${env.WORKSPACE}\\proj.ps1 -Day ${params.DAY} -Time ${params.TIME} -Subject ${params.SUBJECT} 
                        Write-Output "======= Schedule HTML Output ======="  
                        Get-Content "${env.WORKSPACE}\\schedule.html"  
                        Write-Output "====================================" 
                    """
                }
            }
        }

        stage('Publish HTML Report') { 
            steps {
                script {
                    echo 'Publishing HTML output...'  
                    publishHTML(target: [  
                        allowMissing: false, 
                        alwaysLinkToLastBuild: true, 
                        keepAll: true, 
                        reportDir: "${env.WORKSPACE}", 
                        reportFiles: 'schedule.html',  
                        reportName: 'Schedule Report'  
                    ])
                }
            }
        }
    }

    post {  
        success { 
            echo 'Pipeline completed successfully!' 
        }
        failure { 
            echo 'Pipeline failed!' 
        }
    }
}   
